Python Review 2 until 2:45 (about 1hr)
===============
Ask the user for a category and also for an id
Use these to make a call to an API and show the results
The API end-point is https://swapi.info/api/people/1
(replace 'people' and '1' with chosen category and id)
Optionally, store the results in a text file

This is a chance to explore Python 
- Alter these instructions to suit your thinking
- Think about architecture (maybe use separate functions, modules and imports)
  (you don't have to - it can be one single file!!)
- Look online, talk to each other, ask me etc.
There will be an opportunity to share your code at the end

Details:
Write a new module which asks the user for a 'category' 
(remember to use input() which always returns a string)
Validate the user input as follows:
- The category may only be one of 'people', 'planets' or 'species'
  (maybe use the 'in' operator to see if the value is in a tuple of permitted values)

Also ask the user to enter an id
- The id must be a positive integer in the range 1-8
After you ask the user for category value, build a string something like this: 
  url = f'https://swapi.info/api/{cat}/{id}'
  (this will inject the 'category' and 'id' into the curly brackets)

Use the 'requests' library to make a 'get' call to this end-point API
Tell the user what was returned by showing a nicely formatted string

E.g. to access the 'name' property you would do this:
    name = data['name']

Remember to handle potential exceptions

Optional
========
You could write a 'Swapi' class to encapsulate this functionality, including the validation
Or, to ensure the two parameters are in the required form:
Write a module containing a function called 'cleanup' which receives arguments
The cleanup function should ensure:
- there is a value for the 'category' and it is a non-empty string 
  containing one of the permitted categories
- there is a value for the 'id' and it is a positive integer within range
If category or id is missing or unacceptable, you should provide sensible defaults
For example, if id is a floating point number or a string, try to cast it as an int()
Import and use your 'cleanup' function to sanitize the user-provided data

If Time
=======
Every time a successful API call returns some data, append this new data to a text file